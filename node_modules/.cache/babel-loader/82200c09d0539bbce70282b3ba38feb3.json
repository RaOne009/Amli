{"ast":null,"code":"import _objectSpread from \"/home/raone/Pictures/coursera-full-stack-react-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form'; // Lets us bring form state into store, so form state can persist across views (contrast to LocalForm)\n\nimport { Comments } from './comments';\nimport { Dishes } from './dishes';\nimport { Leaders } from './leaders';\nimport { Promotions } from './promotions';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'; // Logs action nicely to console (prev state, action, next state)\n\nimport { InitialFeedback } from './forms';\nexport var ConfigureStore = function ConfigureStore() {\n  var store = createStore(combineReducers(_objectSpread({\n    comments: Comments,\n    dishes: Dishes,\n    leaders: Leaders,\n    promotions: Promotions\n  }, createForms({\n    feedback: InitialFeedback\n  }))), applyMiddleware(thunk, logger));\n  return store;\n};","map":{"version":3,"sources":["/home/raone/Pictures/coursera-full-stack-react-react-master/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","createForms","Comments","Dishes","Leaders","Promotions","thunk","logger","InitialFeedback","ConfigureStore","store","comments","dishes","leaders","promotions","feedback"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAAgD;;AAChD,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAAmC;;AACnC,SAASC,eAAT,QAAgC,SAAhC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAChC,MAAMC,KAAK,GAAGZ,WAAW,CACrBC,eAAe;AACXY,IAAAA,QAAQ,EAAET,QADC;AAEXU,IAAAA,MAAM,EAAET,MAFG;AAGXU,IAAAA,OAAO,EAAET,OAHE;AAIXU,IAAAA,UAAU,EAAET;AAJD,KAKRJ,WAAW,CAAC;AACXc,IAAAA,QAAQ,EAAEP;AADC,GAAD,CALH,EADM,EAUrBR,eAAe,CAACM,KAAD,EAAQC,MAAR,CAVM,CAAzB;AAaA,SAAOG,KAAP;AACH,CAfM","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form'; // Lets us bring form state into store, so form state can persist across views (contrast to LocalForm)\nimport { Comments } from './comments';\nimport { Dishes } from './dishes';\nimport { Leaders } from './leaders';\nimport { Promotions } from './promotions';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'; // Logs action nicely to console (prev state, action, next state)\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            comments: Comments,\n            dishes: Dishes,\n            leaders: Leaders,\n            promotions: Promotions,\n            ...createForms({\n                feedback: InitialFeedback,\n            }),\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}"]},"metadata":{},"sourceType":"module"}