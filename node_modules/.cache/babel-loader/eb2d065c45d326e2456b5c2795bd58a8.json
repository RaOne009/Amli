{"ast":null,"code":"import _objectSpread from \"/home/raone/Pictures/coursera-full-stack-react-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport var addComment = function addComment(comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n  };\n};\nexport var postComment = function postComment(dishId, rating, author, comment) {\n  return function (dispatch) {\n    var newComment = {\n      author: author,\n      comment: comment,\n      dishId: dishId,\n      rating: rating\n    };\n    newComment.date = new Date().toISOString();\n    return fetch(baseUrl + 'comments', {\n      method: 'POST',\n      body: JSON.stringify(newComment),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return dispatch(addComment(response));\n    }).catch(function (error) {\n      console.log('Post comments', error.message);\n      alert('Your comment could not be posted\\nError: ' + error.message);\n    });\n  };\n}; // Thunk lets us return a function instead of an action\n// This can be useful for more complex actions, such as in fetchDishes below\n\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + 'dishes').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(dishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + 'comments').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading(true));\n    return fetch(baseUrl + 'promotions').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};\nexport var fetchLeaders = function fetchLeaders() {\n  return function (dispatch) {\n    dispatch(leadersLoading(true));\n    return fetch(baseUrl + 'leaders').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (leaders) {\n      return dispatch(addLeaders(leaders));\n    }).catch(function (error) {\n      return dispatch(leadersFailed(error.message));\n    });\n  };\n};\nexport var leadersLoading = function leadersLoading() {\n  return {\n    type: ActionTypes.LEADERS_LOADING\n  };\n};\nexport var leadersFailed = function leadersFailed(errmess) {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport var addLeaders = function addLeaders(Leaders) {\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: Leaders\n  };\n};\nexport var postFeedback = function postFeedback(feedback) {\n  return function () {\n    var newFeedback = _objectSpread({\n      date: new Date().toISOString()\n    }, feedback);\n\n    return fetch(baseUrl + 'feedback', {\n      method: 'POST',\n      body: JSON.stringify(newFeedback),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return alert('Thank you for your feedback! ' + JSON.stringify(response));\n    }).catch(function (error) {\n      console.log('Post feedback', error.message);\n      alert('Your feedback could not be posted\\nError: ' + error.message);\n    });\n  };\n};","map":{"version":3,"sources":["/home/raone/Pictures/coursera-full-stack-react-react-master/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","errmess","message","json","catch","console","log","alert","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","Leaders","ADD_LEADERS","postFeedback","feedback","newFeedback"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD;AAAA,SAAc;AACpCC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,WADkB;AAEpCC,IAAAA,OAAO,EAAEH;AAF2B,GAAd;AAAA,CAAnB;AAKP,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAAyBP,OAAzB;AAAA,SAAqC,UAACQ,QAAD,EAAc;AAEtE,QAAMC,UAAU,GAAG;AACfF,MAAAA,MAAM,EAAEA,MADO;AAEfP,MAAAA,OAAO,EAAEA,OAFM;AAGfK,MAAAA,MAAM,EAAEA,MAHO;AAIfC,MAAAA,MAAM,EAAEA;AAJO,KAAnB;AAMAG,IAAAA,UAAU,CAACC,IAAX,GAAkB,IAAIC,IAAJ,GAAWC,WAAX,EAAlB;AAEA,WAAOC,KAAK,CAACf,OAAO,GAAG,UAAX,EAAuB;AAC/BgB,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,UAAf,CAFyB;AAG/BS,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHsB;AAM/BC,MAAAA,WAAW,EAAE;AANkB,KAAvB,CAAL,CAQNC,IARM,CAQD,UAAAC,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAgB;AACZ,eAAOD,QAAP;AACH,OAFD,MAGK;AACD,YAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACH;AACJ,KAjBM,EAkBP,UAAAA,KAAK,EAAI;AACL,UAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,YAAMD,OAAN;AACH,KArBM,EAsBNP,IAtBM,CAsBD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACQ,IAAT,EAAJ;AAAA,KAtBP,EAuBNT,IAvBM,CAuBD,UAAAC,QAAQ;AAAA,aAAIb,QAAQ,CAACT,UAAU,CAACsB,QAAD,CAAX,CAAZ;AAAA,KAvBP,EAwBNS,KAxBM,CAwBA,UAAAP,KAAK,EAAI;AAAEQ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,KAAK,CAACK,OAAnC;AACdK,MAAAA,KAAK,CAAC,8CAA8CV,KAAK,CAACK,OAArD,CAAL;AAAmE,KAzBhE,CAAP;AA0BP,GApC0B;AAAA,CAApB,C,CAsCP;AACA;;AACA,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAC1B,QAAD,EAAc;AAC3CA,IAAAA,QAAQ,CAAC2B,aAAa,CAAC,IAAD,CAAd,CAAR;AAEA,WAAOtB,KAAK,CAACf,OAAO,GAAG,QAAX,CAAL,CACFsB,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAgB;AACZ,eAAOD,QAAP;AACH,OAFD,MAGK;AACD,YAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACH;AACJ,KAVE,EAWH,UAAAA,KAAK,EAAI;AACL,UAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,YAAMD,OAAN;AACH,KAdE,EAeFP,IAfE,CAeG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACQ,IAAT,EAAJ;AAAA,KAfX,EAgBFT,IAhBE,CAgBG,UAAAgB,MAAM;AAAA,aAAI5B,QAAQ,CAAC6B,SAAS,CAACD,MAAD,CAAV,CAAZ;AAAA,KAhBT,EAiBFN,KAjBE,CAiBI,UAAAP,KAAK;AAAA,aAAIf,QAAQ,CAAC8B,YAAY,CAACf,KAAK,CAACK,OAAP,CAAb,CAAZ;AAAA,KAjBT,CAAP;AAkBH,GArB0B;AAAA,CAApB;AAuBP,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAO;AAChClC,IAAAA,IAAI,EAAEJ,WAAW,CAAC0C;AADc,GAAP;AAAA,CAAtB;AAIP,OAAO,IAAMD,YAAY,GAAG,SAAfA,YAAe,CAACX,OAAD;AAAA,SAAc;AACtC1B,IAAAA,IAAI,EAAEJ,WAAW,CAAC2C,aADoB;AAEtCrC,IAAAA,OAAO,EAAEwB;AAF6B,GAAd;AAAA,CAArB;AAKP,OAAO,IAAMU,SAAS,GAAG,SAAZA,SAAY,CAACD,MAAD;AAAA,SAAa;AAClCnC,IAAAA,IAAI,EAAEJ,WAAW,CAAC4C,UADgB;AAElCtC,IAAAA,OAAO,EAAEiC;AAFyB,GAAb;AAAA,CAAlB;AAKP,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAAClC,QAAD,EAAc;AAC7C,WAAOK,KAAK,CAACf,OAAO,GAAG,UAAX,CAAL,CACFsB,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAgB;AACZ,eAAOD,QAAP;AACH,OAFD,MAGK;AACD,YAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACH;AACJ,KAVE,EAWH,UAAAA,KAAK,EAAI;AACL,UAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,YAAMD,OAAN;AACH,KAdE,EAeFP,IAfE,CAeG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACQ,IAAT,EAAJ;AAAA,KAfX,EAgBFT,IAhBE,CAgBG,UAAAuB,QAAQ;AAAA,aAAInC,QAAQ,CAACoC,WAAW,CAACD,QAAD,CAAZ,CAAZ;AAAA,KAhBX,EAiBFb,KAjBE,CAiBI,UAAAP,KAAK;AAAA,aAAIf,QAAQ,CAACqC,cAAc,CAACtB,KAAK,CAACK,OAAP,CAAf,CAAZ;AAAA,KAjBT,CAAP;AAkBH,GAnB4B;AAAA,CAAtB;AAqBP,OAAO,IAAMiB,cAAc,GAAG,SAAjBA,cAAiB,CAAClB,OAAD;AAAA,SAAc;AACxC1B,IAAAA,IAAI,EAAEJ,WAAW,CAACiD,eADsB;AAExC3C,IAAAA,OAAO,EAAEwB;AAF+B,GAAd;AAAA,CAAvB;AAKP,OAAO,IAAMiB,WAAW,GAAG,SAAdA,WAAc,CAACD,QAAD;AAAA,SAAe;AACtC1C,IAAAA,IAAI,EAAEJ,WAAW,CAACkD,YADoB;AAEtC5C,IAAAA,OAAO,EAAEwC;AAF6B,GAAf;AAAA,CAApB;AAKP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAACxC,QAAD,EAAc;AAC3CA,IAAAA,QAAQ,CAACyC,aAAa,CAAC,IAAD,CAAd,CAAR;AAEA,WAAOpC,KAAK,CAACf,OAAO,GAAG,YAAX,CAAL,CACFsB,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAgB;AACZ,eAAOD,QAAP;AACH,OAFD,MAGK;AACD,YAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACH;AACJ,KAVE,EAWH,UAAAA,KAAK,EAAI;AACL,UAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,YAAMD,OAAN;AACH,KAdE,EAeFP,IAfE,CAeG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACQ,IAAT,EAAJ;AAAA,KAfX,EAgBFT,IAhBE,CAgBG,UAAA8B,MAAM;AAAA,aAAI1C,QAAQ,CAAC2C,SAAS,CAACD,MAAD,CAAV,CAAZ;AAAA,KAhBT,EAiBFpB,KAjBE,CAiBI,UAAAP,KAAK;AAAA,aAAIf,QAAQ,CAAC4C,YAAY,CAAC7B,KAAK,CAACK,OAAP,CAAb,CAAZ;AAAA,KAjBT,CAAP;AAkBH,GArB0B;AAAA,CAApB;AAuBP,OAAO,IAAMqB,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAO;AAChChD,IAAAA,IAAI,EAAEJ,WAAW,CAACwD;AADc,GAAP;AAAA,CAAtB;AAIP,OAAO,IAAMD,YAAY,GAAG,SAAfA,YAAe,CAACzB,OAAD;AAAA,SAAc;AACtC1B,IAAAA,IAAI,EAAEJ,WAAW,CAACyD,aADoB;AAEtCnD,IAAAA,OAAO,EAAEwB;AAF6B,GAAd;AAAA,CAArB;AAKP,OAAO,IAAMwB,SAAS,GAAG,SAAZA,SAAY,CAACD,MAAD;AAAA,SAAa;AAClCjD,IAAAA,IAAI,EAAEJ,WAAW,CAAC0D,UADgB;AAElCpD,IAAAA,OAAO,EAAE+C;AAFyB,GAAb;AAAA,CAAlB;AAKP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,UAAChD,QAAD,EAAc;AAC5CA,IAAAA,QAAQ,CAACiD,cAAc,CAAC,IAAD,CAAf,CAAR;AAEA,WAAO5C,KAAK,CAACf,OAAO,GAAG,SAAX,CAAL,CACFsB,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAgB;AACZ,eAAOD,QAAP;AACH,OAFD,MAGK;AACD,YAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACH;AACJ,KAVE,EAWH,UAAAA,KAAK,EAAI;AACL,UAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,YAAMD,OAAN;AACH,KAdE,EAeFP,IAfE,CAeG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACQ,IAAT,EAAJ;AAAA,KAfX,EAgBFT,IAhBE,CAgBG,UAAAsC,OAAO;AAAA,aAAIlD,QAAQ,CAACmD,UAAU,CAACD,OAAD,CAAX,CAAZ;AAAA,KAhBV,EAiBF5B,KAjBE,CAiBI,UAAAP,KAAK;AAAA,aAAIf,QAAQ,CAACoD,aAAa,CAACrC,KAAK,CAACK,OAAP,CAAd,CAAZ;AAAA,KAjBT,CAAP;AAkBH,GArB2B;AAAA,CAArB;AAuBP,OAAO,IAAM6B,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AACjCxD,IAAAA,IAAI,EAAEJ,WAAW,CAACgE;AADe,GAAP;AAAA,CAAvB;AAIP,OAAO,IAAMD,aAAa,GAAG,SAAhBA,aAAgB,CAACjC,OAAD;AAAA,SAAc;AACvC1B,IAAAA,IAAI,EAAEJ,WAAW,CAACiE,cADqB;AAEvC3D,IAAAA,OAAO,EAAEwB;AAF8B,GAAd;AAAA,CAAtB;AAKP,OAAO,IAAMgC,UAAU,GAAG,SAAbA,UAAa,CAACI,OAAD;AAAA,SAAc;AACpC9D,IAAAA,IAAI,EAAEJ,WAAW,CAACmE,WADkB;AAEpC7D,IAAAA,OAAO,EAAE4D;AAF2B,GAAd;AAAA,CAAnB;AAKP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD;AAAA,SAAc,YAAM;AAE5C,QAAMC,WAAW;AAAKzD,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAAX,OAAwCsD,QAAxC,CAAjB;;AAEA,WAAOrD,KAAK,CAACf,OAAO,GAAG,UAAX,EAAuB;AAC/BgB,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAekD,WAAf,CAFyB;AAG/BjD,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHsB;AAM/BC,MAAAA,WAAW,EAAE;AANkB,KAAvB,CAAL,CAQNC,IARM,CAQD,UAAAC,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAgB;AACZ,eAAOD,QAAP;AACH,OAFD,MAGK;AACD,YAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,cAAME,KAAN;AACH;AACJ,KAjBM,EAkBP,UAAAA,KAAK,EAAI;AACL,UAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,YAAMD,OAAN;AACH,KArBM,EAsBNP,IAtBM,CAsBD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACQ,IAAT,EAAJ;AAAA,KAtBP,EAuBNT,IAvBM,CAuBD,UAAAC,QAAQ;AAAA,aAAIY,KAAK,CAAC,kCAAkCjB,IAAI,CAACC,SAAL,CAAeI,QAAf,CAAnC,CAAT;AAAA,KAvBP,EAwBNS,KAxBM,CAwBA,UAAAP,KAAK,EAAI;AAAEQ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,KAAK,CAACK,OAAnC;AACdK,MAAAA,KAAK,CAAC,+CAA+CV,KAAK,CAACK,OAAtD,CAAL;AAAoE,KAzBjE,CAAP;AA0BH,GA9B2B;AAAA,CAArB","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment,\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n        const newComment = {\n            author: author,\n            comment: comment,\n            dishId: dishId,\n            rating: rating,\n        };\n        newComment.date = new Date().toISOString();\n\n        return fetch(baseUrl + 'comments', {\n            method: 'POST',\n            body: JSON.stringify(newComment),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            credentials: 'same-origin'\n        })\n        .then(response => {\n            if (response.ok){\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('Post comments', error.message)\n            alert('Your comment could not be posted\\nError: ' + error.message)})\n}\n\n// Thunk lets us return a function instead of an action\n// This can be useful for more complex actions, such as in fetchDishes below\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true))\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok){\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess,\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes,\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok){\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess,\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments,\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true))\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok){\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n};\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess,\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos,\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true))\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok){\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n};\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess,\n});\n\nexport const addLeaders = (Leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: Leaders,\n});\n\nexport const postFeedback = (feedback) => () => {\n\n    const newFeedback = { date: new Date().toISOString(), ...feedback };\n\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if (response.ok){\n            return response;\n        }\n        else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText)\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(response => alert('Thank you for your feedback! ' + JSON.stringify(response)))\n    .catch(error => { console.log('Post feedback', error.message)\n        alert('Your feedback could not be posted\\nError: ' + error.message)})\n}"]},"metadata":{},"sourceType":"module"}